name: Update Kubectl Binary

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:     # Allows manual trigger of the workflow
  
permissions:
  contents: write         # Grant write access to the repository contents
  
jobs:
  update-kubectl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with Git LFS support
        uses: actions/checkout@v4
        with:
          lfs: true         # Enable Git LFS support

      - name: Install Git LFS (just in case)
        run: |
          sudo apt-get install -y git-lfs
          git lfs install   # Ensure Git LFS is initialized (first time only)

      - name: Set up GitHub credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest release of kubectl
        id: get_latest_release
        run: |
          latest_release=$(curl -L -s https://dl.k8s.io/release/stable.txt)
          echo "latest_release=$latest_release" >> $GITHUB_ENV

      - name: Check if latest release is already in repository
        id: check_existing_release
        run: |
          if git ls-tree -r HEAD --name-only | grep -q "kubectl_${{ env.latest_release }}"; then
            echo "Latest release already exists in the repository."
            exit 0
          fi

      - name: Download latest kubectl binaries
        run: |
          mkdir -p kubectl-latest
          for ARCH in amd64 arm64; do
            curl -L "https://dl.k8s.io/release/${{ env.latest_release }}/bin/linux/${ARCH}/kubectl" \
                 -o "kubectl-latest/kubectl_${{ env.latest_release }}_${ARCH}"
          done
          ls kubectl-latest

      - name: Add downloaded binaries to repository
        run: |
          # Overwrite existing kubectl binaries with new ones
          rm -rf kubectl
          mv kubectl-latest kubectl
          ls kubectl
          git add .            # Git LFS will take care to track these files correctly (thanks to .gitattributes)

      - name: Commit changes
        run: |
          git commit -m "Update kubectl binaries to version ${{ env.latest_release }}" || echo "No changes to commit"

      - name: Push changes to repository
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
