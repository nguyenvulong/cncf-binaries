name: Update Kubectx Binaries

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  update-kubectx:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout utils repository
        uses: actions/checkout@v3

      - name: Get latest release of kubectx
        id: get_latest_release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/ahmetb/kubectx/releases/latest | jq -r '.tag_name')
          echo "latest_release=$latest_release" >> $GITHUB_ENV

      - name: Check if latest release is already in utils repository
        id: check_existing_release
        run: |
          if git ls-tree -r HEAD --name-only | grep -q "kubectx-$latest_release"; then
            echo "Latest release already exists in the repository."
            exit 0
          fi

      - name: Download latest kubectx binaries
        run: |
          mkdir -p kubectx-latest
          curl -s https://api.github.com/repos/ahmetb/kubectx/releases/latest \
            | jq -r '.assets[] | select(.name | test("kubectx|kubens")) | .browser_download_url' \
            | xargs -n 1 -I {} wget -P kubectx-latest {}

      - name: Add downloaded binaries to repository
        run: |
          mv kubectx-latest/* .
          rm -rf kubectx-latest
          git add .
          git commit -m "Update kubectx binaries to version ${{ env.latest_release }}"

      - name: Push changes
        uses: actions/checkout@v3
        with:
          persist-credentials: false # Ensures GitHub token is used correctly

      - name: Set up GitHub credentials
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push changes to repository
        run: |
          git push origin main
